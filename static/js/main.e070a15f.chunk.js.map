{"version":3,"sources":["api/api.js","utils/index.js","utils/hightChartOptionsFactory.js","utils/chart.js","components/weighted-index/WeightedIndex.jsx","components/common/year-selector/YearSelector.jsx","components/common/item-selector/ItemSelector.jsx","components/option-open-interest/OptionOpenInterest.jsx","view/OptionOpenInterestVIew.jsx","components/futures-open-interest/FuturesOpenInterest.jsx","view/FuturesOpenInterestView.jsx","components/navigation/Navigation.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["ApiInstance","axios","create","baseURL","target","get","then","data","toThousands","num","toString","replace","hightChartCommon","subject","yName","year","handleHoverDate","title","text","x","subtitle","yAxis","plotLines","value","width","color","xAxis","type","labels","format","rotation","align","rangeSelector","selected","tooltip","valueSuffix","useHTML","formatter","this","points","point","date","html","y","is_settle","legend","layout","verticalAlign","borderWidth","series","turboThreshold","name","zoomToAll","chart","newStart","xData","newEnd","length","setExtremes","WeightedIndex","chartComponent","useRef","useState","options","setOptions","useEffect","Api","res","stockData","key","item","obj","parseInt","w_index","Date","parse","push","current","ref","highcharts","Highcharts","constructorType","YearSelector","defaultYear","handler","yearOptions","Array","fill","map","index","option","className","htmlFor","onChange","event","ItemSelector","itemMap","selectedChartTypes","splitItem","handleChange","dataset","newTypes","includes","splice","indexOf","sortTypes","filter","splitItemIndex","findIndex","itemGroupOne","slice","itemGroupTwo","itemFactory","tabIndex","onClick","onKeyDown","role","groupOneItems","groupTwoItems","defaultProps","AnnotationsModule","OptionOpenInterest","chartTypes","targetValue","chartOptions","setChartOptions","chartComponents","apiData","setApiData","setChartType","clearAll","keepHoverDate","debounceHandleHoverDate","func","timer","timeout","args","clearTimeout","setTimeout","debounce","chartTitle","charts","forEach","removeAnnotation","addAnnotation","id","labelOptions","distance","chartOptionFactory","component","element","OptionOpenInterestVIew","getFullYear","String","setYear","FuturesOpenInterest","seriesDataFactory","targetPropertyCheck","targetProperty","yValue","seriesType","reduce","acc","cur","hightChartMultiple","FuturesOpenInterestView","Navigation","route","activeClassName","to","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e070a15f.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst ApiInstance = axios.create({\n  baseURL: 'https://storage.googleapis.com/jamie_stock/'\n})\n\nexport default {\n  getWeightIndex(target) {\n    return ApiInstance.get(`weighted_index/${target}.json`).then(\n      ({ data }) => data\n    )\n  },\n  getOptionOpen(target) {\n    return ApiInstance.get(`three_corporate_option_opi/${target}.json`).then(\n      ({ data }) => data\n    )\n  },\n  getFuturesOpen(target) {\n    return ApiInstance.get(`three_corporate_open_interest/${target}.json`).then(\n      ({ data }) => data\n    )\n  }\n}\n","export function debounce(func, timeout = 1000) {\n  let timer\n  return (...args) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      func(...args)\n    }, timeout)\n  }\n}\n\nexport function toThousands(num) {\n  return (num || 0).toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,')\n}\n","import { toThousands } from './index'\n\nexport const hightChartCommon = (\n  subject,\n  yName,\n  year,\n  data,\n  handleHoverDate = () => {}\n) => ({\n  title: {\n    text: `${year} ${subject}`,\n    x: -20 // center\n  },\n  subtitle: {\n    text: '',\n    x: -20\n  },\n  yAxis: {\n    title: {\n      text: yName\n    },\n    plotLines: [\n      {\n        value: 0,\n        width: 1,\n        color: '#808080'\n      }\n    ]\n  },\n  xAxis: {\n    type: 'datetime',\n    labels: {\n      format: '{value:%m/%d}',\n      rotation: 45,\n      align: 'left'\n    }\n  },\n  rangeSelector: {\n    selected: 5\n  },\n  tooltip: {\n    valueSuffix: '',\n    useHTML: true,\n    formatter() {\n      handleHoverDate(this.points[0].point.date, `${year} ${subject}`)\n\n      let html =\n        `<span>日期：<span>${this.points[0].point.date}<br>` +\n        `<span>${yName}: <span>${toThousands(this.points[0].point.y)}<br>`\n\n      if (this.points[0].point.is_settle === true) {\n        html += '<span style=\"color: red\">結算日<span>'\n      }\n      return html\n    }\n  },\n  legend: {\n    layout: 'vertical',\n    align: 'right',\n    verticalAlign: 'middle',\n    borderWidth: 0\n  },\n  series: [\n    {\n      turboThreshold: 0,\n      name: subject,\n      data\n    }\n  ]\n})\n\nexport const hightChartMultiple = (subject, yName, year, series) => ({\n  title: {\n    text: `${year} ${subject}`,\n    x: -20 // center\n  },\n  subtitle: {\n    text: '',\n    x: -20\n  },\n  rangeSelector: {\n    selected: 5\n  },\n  yAxis: {\n    title: {\n      text: yName\n    },\n    plotLines: [\n      {\n        value: 0,\n        width: 1,\n        color: '#808080'\n      }\n    ]\n  },\n  xAxis: {\n    type: 'datetime',\n    labels: {\n      format: '{value:%m/%d}',\n      rotation: 45,\n      align: 'left'\n    }\n  },\n  useHTML: true,\n  tooltip: {\n    valueSuffix: '',\n    formatter() {\n      const labels = this.points.reduce(\n        (acc, cur) =>\n          `${acc}<span style=\"color:${cur.color}\">${\n            cur.point.series.name\n          }</span>: <b>${toThousands(cur.y)}</b><br>`,\n        ''\n      )\n      let html = `<span>日期：</span>${this.points[0].point.date}<br>${labels}`\n\n      if (this.points[0].point.is_settle === true) {\n        html += '<span style=\"color: red\">結算日<span>'\n      }\n      return html\n    }\n  },\n  legend: {\n    layout: 'vertical',\n    align: 'right',\n    verticalAlign: 'middle',\n    borderWidth: 0\n  },\n  series\n})\n","export const zoomToAll = chart => {\n  if (!chart) {\n    return\n  }\n  const series = chart.series[0]\n  const xAxis = chart.xAxis[0]\n  const newStart = series.xData[0]\n  const newEnd = series.xData[series.xData.length - 1]\n\n  xAxis.setExtremes(newStart, newEnd)\n}\n\nexport const temp = () => {}\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport Highcharts from 'highcharts/highstock'\nimport HighchartsReact from 'highcharts-react-official'\nimport Api from '../../api/api'\nimport { hightChartCommon } from '../../utils/hightChartOptionsFactory'\nimport { zoomToAll } from '../../utils/chart'\n\nfunction WeightedIndex({ year }) {\n  const chartComponent = useRef(null)\n  const [options, setOptions] = useState(null)\n\n  useEffect(() => {\n    Api.getWeightIndex(year).then(res => {\n      const stockData = []\n      for (const key in res) {\n        const item = res[key]\n\n        const obj = {}\n        obj.y = parseInt(item.w_index)\n        obj.x = Date.parse(key)\n        obj.date = key\n        obj.w_index = item.w_index\n        obj.is_settle = item.is_settle\n        stockData.push(obj)\n      }\n\n      setOptions(hightChartCommon('加權指數', '價位', year, stockData))\n      zoomToAll(chartComponent.current.chart)\n    })\n  }, [year])\n\n  return (\n    <HighchartsReact\n      ref={chartComponent}\n      highcharts={Highcharts}\n      constructorType=\"stockChart\"\n      options={options}\n    />\n  )\n}\n\nWeightedIndex.propTypes = {\n  year: PropTypes.string.isRequired\n}\n\nexport default WeightedIndex\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction YearSelector({ defaultYear, year, handler }) {\n  const yearRange = Array(5)\n    .fill()\n    .map((item, index) => defaultYear - index)\n\n  const yearOptions = yearRange.map(option => (\n    <option key={option} value={option}>\n      {option}\n    </option>\n  ))\n\n  const handleChange = event => {\n    handler(event.target.value)\n  }\n  return (\n    <div className=\"year-selector\">\n      <label htmlFor=\"year\">Choose a \byear:</label>\n      <select name=\"year\" value={year} onChange={handleChange}>\n        {yearOptions}\n      </select>\n    </div>\n  )\n}\n\nYearSelector.propTypes = {\n  year: PropTypes.string.isRequired,\n  defaultYear: PropTypes.number.isRequired,\n  handler: PropTypes.func.isRequired\n}\nexport default YearSelector\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './style.css'\n\nfunction ItemSelector({\n  itemMap,\n  selectedChartTypes,\n  handler,\n  splitItem = ''\n}) {\n  const handleChange = event => {\n    const name = event.target.dataset.value\n    const newTypes = [...selectedChartTypes]\n    const hasSelected = selectedChartTypes.includes(name)\n\n    if (hasSelected) {\n      newTypes.splice(selectedChartTypes.indexOf(name), 1)\n    } else {\n      newTypes.push(name)\n    }\n\n    const sortTypes = itemMap\n      .map(item => item.name)\n      .filter(item => newTypes.includes(item))\n    handler(sortTypes)\n  }\n\n  let splitItemIndex = itemMap.findIndex(item => item.name === splitItem)\n  splitItemIndex = splitItemIndex === -1 ? itemMap.length : splitItemIndex\n\n  const itemGroupOne = itemMap.slice(0, splitItemIndex)\n  const itemGroupTwo = itemMap.slice(splitItemIndex, itemMap.length)\n\n  const itemFactory = (item, index) => (\n    <span\n      key={item.name}\n      tabIndex={index}\n      className={`item ${\n        selectedChartTypes.includes(item.name) ? 'active' : ''\n      } `}\n      data-value={item.name}\n      onClick={handleChange}\n      onKeyDown={handleChange}\n      role=\"button\"\n    >\n      {item.name}\n    </span>\n  )\n  const groupOneItems = itemGroupOne.map((item, index) =>\n    itemFactory(item, index)\n  )\n\n  const groupTwoItems = itemGroupTwo.map((item, index) =>\n    itemFactory(item, index)\n  )\n\n  return (\n    <div className=\"item-selector\">\n      <div className=\"group\">{groupOneItems}</div>\n      <div className=\"group\">{groupTwoItems}</div>\n    </div>\n  )\n}\n\nItemSelector.propTypes = {\n  itemMap: PropTypes.arrayOf(\n    PropTypes.shape({\n      targetValue: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n      name: PropTypes.string\n    })\n  ).isRequired,\n  selectedChartTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  handler: PropTypes.func.isRequired,\n  splitItem: PropTypes.string\n}\n\nItemSelector.defaultProps = {\n  splitItem: ''\n}\nexport default ItemSelector\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport Highcharts from 'highcharts/highstock'\nimport HighchartsReact from 'highcharts-react-official'\nimport AnnotationsModule from 'highcharts/modules/annotations'\nimport Api from '../../api/api'\nimport { hightChartCommon } from '../../utils/hightChartOptionsFactory'\nimport { zoomToAll } from '../../utils/chart'\nimport { debounce, toThousands } from '../../utils/index'\nimport ItemSelector from '../common/item-selector/ItemSelector'\nimport './style.css'\n\nAnnotationsModule(Highcharts)\nfunction OptionOpenInterest({ year }) {\n  const chartTypes = [\n    {\n      name: '外資 Buy Call 未平倉量',\n      targetValue: 'f_buy_call'\n    },\n    {\n      name: '外資 Buy Call 未平倉金額',\n      targetValue: 'f_buy_call_amount'\n    },\n    {\n      name: '外資 Buy Put 未平倉量',\n      targetValue: 'f_buy_put'\n    },\n    {\n      name: '外資 Buy Put 未平倉金額',\n      targetValue: 'f_buy_put_amount'\n    },\n    {\n      name: '外資 Sell Call 未平倉量',\n      targetValue: 'f_sell_call'\n    },\n    {\n      name: '外資 Sell Call 未平倉金額',\n      targetValue: 'f_sell_call_amount'\n    },\n    {\n      name: '外資 Sell Put 未平倉量',\n      targetValue: 'f_sell_put'\n    },\n    {\n      name: '外資 Sell Put 未平倉金額',\n      targetValue: 'f_sell_put_amount'\n    },\n    {\n      name: '外資多方口數',\n      targetValue: 'f_long'\n    },\n    {\n      name: '外資多方契約金額',\n      targetValue: 'f_long_amount'\n    },\n    {\n      name: '外資空方口數',\n      targetValue: 'f_short'\n    },\n    {\n      name: '外資空方契約金額',\n      targetValue: 'f_short_amount'\n    },\n    {\n      name: '外資多空淨額口數',\n      targetValue: 'f_net'\n    },\n    {\n      name: '外資多空淨額契約金額',\n      targetValue: 'f_net_amount'\n    },\n    {\n      name: '自營 Buy Call 未平倉量',\n      targetValue: 'self_buy_call'\n    },\n    {\n      name: '自營 Buy Call 未平倉金額',\n      targetValue: 'self_buy_call_amount'\n    },\n    {\n      name: '自營 Buy Put 未平倉量',\n      targetValue: 'self_buy_put'\n    },\n    {\n      name: '自營 Buy Put 未平倉金額',\n      targetValue: 'self_buy_put_amount'\n    },\n    {\n      name: '自營 Sell Call 未平倉量',\n      targetValue: 'self_sell_call'\n    },\n    {\n      name: '自營 Sell Call 未平倉金額',\n      targetValue: 'self_sell_call_amount'\n    },\n    {\n      name: '自營 Sell Put 未平倉量',\n      targetValue: 'self_sell_put'\n    },\n    {\n      name: '自營 Sell Put 未平倉金額',\n      targetValue: 'self_sell_put_amount'\n    },\n    {\n      name: '自營多方口數',\n      targetValue: 'self_long'\n    },\n    {\n      name: '自營多方契約金額',\n      targetValue: 'self_long_amount'\n    },\n    {\n      name: '自營空方口數',\n      targetValue: 'self_short'\n    },\n    {\n      name: '自營空方契約金額',\n      targetValue: 'self_short_amount'\n    },\n    {\n      name: '自營多空淨額口數',\n      targetValue: 'self_net'\n    },\n    {\n      name: '自營多空淨額契約金額',\n      targetValue: 'self_net_amount'\n    }\n  ]\n  const [chartOptions, setChartOptions] = useState([])\n  const chartComponents = useRef([])\n  const [apiData, setApiData] = useState({})\n  const [selectedChartTypes, setChartType] = useState([])\n\n  function clearAll() {\n    setChartType([])\n  }\n\n  let keepHoverDate = ''\n  function handleHoverDate(date, chartTitle) {\n    const charts = chartComponents.current.filter(\n      chartComponent => chartComponent\n    )\n    charts.forEach(chartComponent => {\n      const { chart } = chartComponent\n      chart.removeAnnotation(keepHoverDate)\n    })\n\n    charts.forEach(chartComponent => {\n      const { chart } = chartComponent\n      if (chart.options.title.text !== chartTitle) {\n        const value = chart.get(date).y\n        chart.addAnnotation({\n          id: date,\n          labelOptions: {\n            y: 15,\n            verticalAlign: 'bottom',\n            distance: 25\n          },\n          labels: [\n            {\n              point: date,\n              text: `${toThousands(value)}`\n            }\n          ]\n        })\n      }\n    })\n\n    keepHoverDate = date\n  }\n\n  const debounceHandleHoverDate = debounce(handleHoverDate, 100)\n\n  useEffect(() => {\n    Api.getOptionOpen(year).then(res => {\n      setApiData(res)\n    })\n  }, [year])\n\n  useEffect(() => {\n    function chartOptionFactory(type) {\n      const { name, targetValue } = chartTypes.filter(\n        item => item.name === type\n      )[0]\n      const stockData = []\n\n      for (const date in apiData) {\n        const item = apiData[date]\n        const obj = {}\n        obj.y = parseInt(item[targetValue])\n        obj.x = Date.parse(date)\n        obj.date = date\n        obj.is_settle = item.is_settle\n        obj.id = date\n        stockData.push(obj)\n      }\n\n      return hightChartCommon(\n        name,\n        '值',\n        year,\n        stockData,\n        debounceHandleHoverDate\n      )\n    }\n    const options = selectedChartTypes.map(type => chartOptionFactory(type))\n\n    setChartOptions(options)\n\n    chartComponents.current.forEach(component => {\n      zoomToAll(component?.current?.chart)\n    })\n  }, [selectedChartTypes, apiData])\n\n  return (\n    <div className=\"option-open-wrapper\">\n      <div className=\"title-wrap\">\n        <span className=\"title\">選擇權未平倉</span>\n        <span\n          className=\"clear-action\"\n          onClick={clearAll}\n          onKeyDown={clearAll}\n          role=\"button\"\n          tabIndex=\"0\"\n        >\n          清空\n        </span>\n      </div>\n      <ItemSelector\n        itemMap={chartTypes}\n        handler={setChartType}\n        selectedChartTypes={selectedChartTypes}\n        splitItem=\"自營 Buy Call 未平倉量\"\n      />\n      {chartOptions.map((option, index) => (\n        <HighchartsReact\n          key={option.title.text}\n          ref={element => (chartComponents.current[index] = element)}\n          highcharts={Highcharts}\n          constructorType=\"stockChart\"\n          options={option}\n        />\n      ))}\n    </div>\n  )\n}\n\nOptionOpenInterest.propTypes = {\n  year: PropTypes.string.isRequired\n}\n\nexport default OptionOpenInterest\n","import React, { useState } from 'react'\nimport WeightedIndex from '../components/weighted-index/WeightedIndex'\nimport YearSelector from '../components/common/year-selector/YearSelector'\nimport OptionOpenInterest from '../components/option-open-interest/OptionOpenInterest'\n\nfunction OptionOpenInterestVIew() {\n  const defaultYear = new Date().getFullYear()\n  const [year, setYear] = useState(String(defaultYear))\n\n  return (\n    <div className=\"option-open-interest\">\n      <YearSelector defaultYear={defaultYear} year={year} handler={setYear} />\n      <WeightedIndex year={year} />\n      <OptionOpenInterest year={year} />\n    </div>\n  )\n}\n\nexport default OptionOpenInterestVIew\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport Highcharts from 'highcharts/highstock'\nimport HighchartsReact from 'highcharts-react-official'\nimport Api from '../../api/api'\nimport { hightChartMultiple } from '../../utils/hightChartOptionsFactory'\nimport { zoomToAll } from '../../utils/chart'\nimport ItemSelector from '../common/item-selector/ItemSelector'\nimport './style.css'\n\nfunction FuturesOpenInterest({ year }) {\n  const chartTypes = [\n    {\n      name: '多方口數',\n      targetValue: ['bull_foreign', 'bull_self']\n    },\n    {\n      name: '多方金額',\n      targetValue: ['bull_foreign_amount', 'bull_self_amount']\n    },\n    {\n      name: '空方口數',\n      targetValue: ['bear_foreign', 'bear_self']\n    },\n    {\n      name: '空方金額',\n      targetValue: ['bear_foreign_amount', 'bear_self_amount']\n    },\n    {\n      name: '多空淨額口數',\n      targetValue: ['diff_foreign', 'diff_self']\n    },\n    {\n      name: '多空淨額金額',\n      targetValue: ['diff_foreign_amount', 'diff_self_amount']\n    }\n  ]\n  const [chartOptions, setChartOptions] = useState([])\n  const chartComponents = useRef([])\n  const [apiData, setApiData] = useState({})\n  const [selectedChartTypes, setChartType] = useState([])\n\n  function clearAll() {\n    setChartType([])\n  }\n\n  useEffect(() => {\n    Api.getFuturesOpen(year).then(res => {\n      setApiData(res)\n    })\n  }, [year])\n\n  useEffect(() => {\n    function seriesDataFactory(targetPropertyCheck, targetValue) {\n      const stockData = []\n      const targetProperty = targetValue.filter(item =>\n        item.includes(targetPropertyCheck)\n      )[0]\n\n      for (const date in apiData) {\n        const item = apiData[date]\n        const obj = {}\n        let yValue = parseInt(item[targetProperty])\n\n        if (targetPropertyCheck === 'total') {\n          yValue =\n            parseInt(item[targetValue[0]]) + parseInt(item[targetValue[1]])\n        }\n        obj.y = yValue\n        obj.x = Date.parse(date)\n        obj.date = date\n        obj.is_settle = item.is_settle\n        obj.id = date\n        stockData.push(obj)\n      }\n\n      return stockData\n    }\n\n    function chartOptionFactory(type) {\n      const { name, targetValue } = chartTypes.filter(\n        item => item.name === type\n      )[0]\n      const seriesTypes = [\n        {\n          name: '外資',\n          targetPropertyCheck: 'foreign',\n          color: '#054099'\n        },\n        {\n          name: '自營',\n          targetPropertyCheck: 'self',\n          color: '#a86206'\n        },\n        {\n          name: '總和',\n          targetPropertyCheck: 'total',\n          color: '#207506'\n        }\n      ]\n\n      const series = seriesTypes.map(seriesType => ({\n        name: seriesType.name,\n        data: seriesDataFactory(seriesType.targetPropertyCheck, targetValue),\n        color: seriesType.color\n      }))\n\n      return hightChartMultiple(name, '值', year, series)\n    }\n    const options = selectedChartTypes.map(type => chartOptionFactory(type))\n\n    setChartOptions(options)\n\n    chartComponents.current.forEach(component => {\n      zoomToAll(component?.current?.chart)\n    })\n  }, [selectedChartTypes, apiData])\n\n  return (\n    <div className=\"option-open-wrapper\">\n      <div className=\"title-wrap\">\n        <span className=\"title\">期貨未平倉</span>\n        <span\n          className=\"clear-action\"\n          onClick={clearAll}\n          onKeyDown={clearAll}\n          role=\"button\"\n          tabIndex=\"0\"\n        >\n          清空\n        </span>\n      </div>\n      <ItemSelector\n        itemMap={chartTypes}\n        handler={setChartType}\n        selectedChartTypes={selectedChartTypes}\n      />\n      {chartOptions.map((option, index) => (\n        <HighchartsReact\n          key={option.title.text}\n          ref={element => (chartComponents.current[index] = element)}\n          highcharts={Highcharts}\n          constructorType=\"stockChart\"\n          options={option}\n        />\n      ))}\n    </div>\n  )\n}\n\nFuturesOpenInterest.propTypes = {\n  year: PropTypes.string.isRequired\n}\n\nexport default FuturesOpenInterest\n","import React, { useState } from 'react'\nimport WeightedIndex from '../components/weighted-index/WeightedIndex'\nimport YearSelector from '../components/common/year-selector/YearSelector'\nimport FuturesOpenInterest from '../components/futures-open-interest/FuturesOpenInterest'\n\nfunction FuturesOpenInterestView() {\n  const defaultYear = new Date().getFullYear()\n  const [year, setYear] = useState(String(defaultYear))\n\n  return (\n    <div className=\"futures-open-interest\">\n      <YearSelector defaultYear={defaultYear} year={year} handler={setYear} />\n      <WeightedIndex year={year} />\n      <FuturesOpenInterest year={year} />\n    </div>\n  )\n}\n\nexport default FuturesOpenInterestView\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './style.css'\n\nfunction Navigation() {\n  const navMap = [\n    {\n      text: '選擇權未平倉',\n      route: 'option-open-interest'\n    },\n    {\n      text: '期貨未平倉',\n      route: 'futures-open-interest'\n    }\n  ]\n  return (\n    <div className=\"navigation\">\n      {navMap.map(item => (\n        <NavLink\n          key={item.text}\n          className=\"nav-item\"\n          activeClassName=\"selected\"\n          to={`/${item.route}`}\n        >\n          {item.text}\n        </NavLink>\n      ))}\n    </div>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport OptionOpenInterestVIew from './view/OptionOpenInterestVIew'\nimport FuturesOpenInterestView from './view/FuturesOpenInterestView'\nimport Navigation from './components/navigation/Navigation'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <div className=\"main\">\n          <Switch>\n            <Route path=\"/option-open-interest\">\n              <OptionOpenInterestVIew />\n            </Route>\n            <Route path=\"/futures-open-interest\">\n              <FuturesOpenInterestView />\n            </Route>\n            <Route path=\"/\">\n              <OptionOpenInterestVIew />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}